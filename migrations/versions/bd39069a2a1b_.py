"""empty message

Revision ID: bd39069a2a1b
Revises: 
Create Date: 2024-10-11 11:30:37.605766

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'bd39069a2a1b'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('Category',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('category_name', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Owner',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('password', sa.String(length=255), nullable=False),
    sa.Column('owner_name', sa.String(length=100), nullable=True),
    sa.Column('owner_email', sa.String(length=100), nullable=False),
    sa.Column('owner_phone', sa.String(length=25), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Event',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('street', sa.String(length=255), nullable=True),
    sa.Column('zip_code', sa.String(length=20), nullable=True),
    sa.Column('state', sa.String(length=100), nullable=True),
    sa.Column('start_time', sa.DateTime(), nullable=False),
    sa.Column('end_time', sa.DateTime(), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('color_id', sa.String(length=2), nullable=True),
    sa.Column('owner_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['owner_id'], ['Owner.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('Event', schema=None) as batch_op:
        batch_op.create_index('ix_event_end_time', ['end_time'], unique=False)
        batch_op.create_index('ix_event_owner_id', ['owner_id'], unique=False)
        batch_op.create_index('ix_event_start_time', ['start_time'], unique=False)

    op.create_table('Profile',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('date_of_birth', sa.Date(), nullable=True),
    sa.Column('sex', sa.String(length=20), nullable=True),
    sa.Column('fixed', sa.Boolean(), nullable=True),
    sa.Column('breed', sa.String(length=100), nullable=True),
    sa.Column('weight', sa.String(length=100), nullable=True),
    sa.Column('chip_number', sa.String(length=25), nullable=True),
    sa.Column('image_path', sa.String(length=500), nullable=True),
    sa.Column('vet_clinic_name', sa.String(length=250), nullable=True),
    sa.Column('vet_clinic_phone', sa.String(length=25), nullable=True),
    sa.Column('vet_clinic_email', sa.String(length=100), nullable=True),
    sa.Column('vet_doctor_name', sa.String(length=100), nullable=True),
    sa.Column('owner_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['Owner.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('ServiceType',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('service_type_name', sa.String(length=255), nullable=False),
    sa.Column('category_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['category_id'], ['Category.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('MedicalRecord',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('service_date', sa.Date(), nullable=False),
    sa.Column('category_id', sa.Integer(), nullable=False),
    sa.Column('service_type_id', sa.Integer(), nullable=False),
    sa.Column('follow_up_date', sa.Date(), nullable=True),
    sa.Column('fee', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('image_path', sa.String(length=500), nullable=True),
    sa.Column('profile_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['category_id'], ['Category.id'], ),
    sa.ForeignKeyConstraint(['profile_id'], ['Profile.id'], ),
    sa.ForeignKeyConstraint(['service_type_id'], ['ServiceType.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('MedicalRecord')
    op.drop_table('ServiceType')
    op.drop_table('Profile')
    with op.batch_alter_table('Event', schema=None) as batch_op:
        batch_op.drop_index('ix_event_start_time')
        batch_op.drop_index('ix_event_owner_id')
        batch_op.drop_index('ix_event_end_time')

    op.drop_table('Event')
    op.drop_table('Owner')
    op.drop_table('Category')
    # ### end Alembic commands ###
